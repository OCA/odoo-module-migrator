- extensions:
    - ".py"
  patterns:
    - "_notify_progress\\s*\\("
    - "_trigger\\s*\\("
    - "\\[:\\s*batch_size\\s*\\]"
  prompt: |
    # Prompt: Migración de Métodos en Crons

    Analiza el siguiente código de Odoo y determina si corresponde aplicar la migración de métodos en **crons**:

    - Sustituir llamadas a `_notify_progress` por `_commit_progress`.
    - Ejecutar un primer `_commit_progress(remaining=<total_len>)` antes de iniciar las iteraciones, indicando el total de registros a procesar **(sin try/except)**.
    - Dentro del bucle, llamar a `_commit_progress(processed=1)` después de cada registro procesado **(cada llamada debe ir dentro de un bloque `try/except`)**.
    - En caso de excepción dentro del bucle, ejecutar `self.env.cr.rollback()`.
    - Si antes se usaban batches (`[:batch_size]`) y `_trigger`, eliminar tanto el slicing de batches como el uso de `_trigger`.

    ### Reglas
    - El refactor **solo aplica si el código contiene `_notify_progress` o `_trigger` usado dentro de un cron iterativo por lotes**.
    - **No refactorizar** métodos que solo contienen un `_trigger` suelto sin bucle ni batches.
    - Si corresponde aplicar el refactor, devolver un objeto JSON con `show_change: true` y en `content` incluir únicamente el **código refactorizado**.
    - Si no corresponde, devolver `show_change: false` y `content: ""`.

    ### Ejemplo genérico válido

    #### Antes

    ```python
    batch_size = 100
    data = <code>
    total_len = len(data)
    batch_size = min(total_len, batch_size)
    for i, rec in enumerate(data[:batch_size]):
        <code>
        self.env["ir.cron"]._notify_progress(done=i + 1, remaining=batch_size - (i + 1))

    if total_len > batch_size:
        self.env.ref("saas_provider_upgrade.ir_cron_update_client_data_records")._trigger()
    ```

    #### Después

    ```python
    data = <code>
    total_len = len(data)
    self.env["ir.cron"]._commit_progress(remaining=total_len)
    for rec in data:
        try:
            <code>
            self.env["ir.cron"]._commit_progress(processed=1)
        except Exception:
            self.env.cr.rollback()
    ```
